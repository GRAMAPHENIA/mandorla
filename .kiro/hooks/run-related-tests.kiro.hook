{
  "enabled": true,
  "name": "Ejecutor de Tests Relacionados",
  "description": "Hook que ejecuta autom√°ticamente tests relacionados al guardar archivos, optimizando el tiempo de testing y detectando regresiones temprano",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.{ts,tsx}",
      "types/**/*.ts",
      "lib/**/*.ts"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Ejecuta autom√°ticamente los tests relacionados al archivo modificado, optimizando el tiempo de ejecuci√≥n y detectando regresiones:\n\n## 1. An√°lisis de Archivos Relacionados\n\n**Identificar archivos de test relacionados:**\n- Tests en la misma carpeta (`*.test.ts`, `*.spec.ts`)\n- Tests en carpeta `__tests__` del mismo directorio\n- Tests que importan el archivo modificado\n- Tests de integraci√≥n que usan el m√≥dulo\n\n**Detectar dependencias:**\n- Componentes que usan el archivo modificado\n- Servicios que dependen del m√≥dulo\n- Hooks que utilizan las funciones modificadas\n- Stores que se ven afectados por los cambios\n\n## 2. Estrategia de Ejecuci√≥n de Tests\n\n### Tests Unitarios (Prioridad Alta)\n```bash\n# Ejecutar tests espec√≠ficos del archivo\nnpx jest [archivo].test.ts --verbose\n\n# Ejecutar tests relacionados usando Jest\nnpx jest --findRelatedTests [archivo-modificado]\n\n# Ejecutar tests con watch mode para desarrollo\nnpx jest --watch --findRelatedTests [archivo-modificado]\n```\n\n### Tests de Integraci√≥n (Prioridad Media)\n```bash\n# Tests de m√≥dulo completo si se modific√≥ dominio\nnpx jest src/modules/[modulo]/**/*.test.ts\n\n# Tests de componentes si se modific√≥ presentaci√≥n\nnpx jest src/components/**/*.test.ts --testNamePattern=\"[ComponenteRelacionado]\"\n```\n\n### Tests End-to-End (Prioridad Baja)\n```bash\n# Solo si se modificaron flujos cr√≠ticos\nnpx jest --testPathPattern=e2e --testNamePattern=\"[flujo-critico]\"\n```\n\n## 3. Configuraci√≥n por Tipo de Archivo\n\n### Entidades de Dominio\n**Archivo modificado**: `src/modules/*/domain/entities/*.ts`\n**Tests a ejecutar**:\n- Tests unitarios de la entidad\n- Tests de value objects relacionados\n- Tests de servicios que usan la entidad\n- Tests de repositorios que persisten la entidad\n\n**Comando simulado**:\n```bash\nnpx jest --findRelatedTests src/modules/productos/domain/entities/product-entity.ts\nnpx jest src/modules/productos/application/**/*.test.ts\nnpx jest src/modules/productos/infrastructure/**/*.test.ts\n```\n\n### Servicios de Aplicaci√≥n\n**Archivo modificado**: `src/modules/*/application/services/*.ts`\n**Tests a ejecutar**:\n- Tests unitarios del servicio\n- Tests de casos de uso relacionados\n- Tests de integraci√≥n con repositorios\n- Tests de componentes que usan el servicio\n\n**Comando simulado**:\n```bash\nnpx jest --findRelatedTests src/modules/carrito/application/services/cart-service.ts\nnpx jest src/components/**/*.test.ts --testNamePattern=\"Cart\"\n```\n\n### Componentes React\n**Archivo modificado**: `src/components/**/*.tsx`\n**Tests a ejecutar**:\n- Tests unitarios del componente\n- Tests de componentes padre que lo usan\n- Tests de hooks relacionados\n- Tests de integraci√≥n de la p√°gina que lo contiene\n\n**Comando simulado**:\n```bash\nnpx jest --findRelatedTests src/components/products/product-card.tsx\nnpx jest src/app/**/*.test.ts --testNamePattern=\"Product\"\n```\n\n### Hooks Personalizados\n**Archivo modificado**: `src/hooks/*.ts`\n**Tests a ejecutar**:\n- Tests unitarios del hook\n- Tests de componentes que usan el hook\n- Tests de integraci√≥n de flujos que dependen del hook\n\n**Comando simulado**:\n```bash\nnpx jest --findRelatedTests src/hooks/use-productos.ts\nnpx jest src/components/**/*.test.ts --grep=\"useProductos\"\n```\n\n### Stores de Zustand\n**Archivo modificado**: `src/stores/*.ts`\n**Tests a ejecutar**:\n- Tests unitarios del store\n- Tests de componentes que consumen el store\n- Tests de integraci√≥n de flujos completos\n- Tests de persistencia (si aplica)\n\n**Comando simulado**:\n```bash\nnpx jest --findRelatedTests src/stores/cart-store.ts\nnpx jest src/components/cart/**/*.test.ts\nnpx jest src/app/cart/**/*.test.ts\n```\n\n## 4. Optimizaci√≥n de Ejecuci√≥n\n\n### Ejecuci√≥n Inteligente\n**Criterios para optimizar:**\n- Ejecutar primero tests que fallan frecuentemente\n- Priorizar tests unitarios sobre integraci√≥n\n- Limitar tests E2E a cambios cr√≠ticos\n- Usar cach√© de Jest para acelerar ejecuci√≥n\n\n### Configuraci√≥n de Performance\n```javascript\n// Configuraci√≥n optimizada para desarrollo\nconst jestConfig = {\n  maxWorkers: '50%',\n  cache: true,\n  watchman: true,\n  collectCoverageOnlyFrom: {\n    // Solo archivos modificados\n  }\n}\n```\n\n## 5. Detecci√≥n de Regresiones\n\n### An√°lisis de Resultados\n**Detectar problemas:**\n- Tests que fallan despu√©s del cambio\n- Degradaci√≥n en cobertura de c√≥digo\n- Tests que se vuelven m√°s lentos\n- Warnings o deprecations nuevos\n\n### Reporte de Regresiones\n```markdown\n## üîç Resultados de Tests Relacionados\n\n### ‚úÖ Tests Exitosos: [n√∫mero]\n- [lista de tests que pasaron]\n\n### ‚ùå Tests Fallidos: [n√∫mero]\n- [lista de tests que fallaron con descripci√≥n]\n\n### ‚ö†Ô∏è Advertencias:\n- [warnings o issues detectados]\n\n### üìä Cobertura:\n- **Antes**: [porcentaje]%\n- **Despu√©s**: [porcentaje]%\n- **Cambio**: [+/-]%\n\n### üöÄ Performance:\n- **Tiempo de ejecuci√≥n**: [tiempo]\n- **Tests ejecutados**: [n√∫mero]\n```\n\n## 6. Integraci√≥n con CI/CD\n\n### Preparaci√≥n para Pipeline\n**Generar informaci√≥n para CI:**\n- Lista de tests afectados\n- Comandos optimizados para ejecutar\n- Archivos de configuraci√≥n necesarios\n- Variables de entorno requeridas\n\n### Comandos para CI\n```bash\n# Tests relacionados para CI\nnpx jest --findRelatedTests [archivos-modificados] --ci --coverage --watchAll=false\n\n# Tests con reporte JUnit para integraci√≥n\nnpx jest --findRelatedTests [archivos-modificados] --reporters=default --reporters=jest-junit\n```\n\n## 7. Configuraci√≥n Espec√≠fica del Proyecto\n\n### Mandorla E-commerce\n**M√≥dulos cr√≠ticos que requieren tests completos:**\n- **Carrito**: Tests de c√°lculos de precio y persistencia\n- **Productos**: Tests de filtrado y b√∫squeda\n- **Pedidos**: Tests de flujo completo de checkout\n- **Clientes**: Tests de validaci√≥n de datos\n\n### Umbrales de Cobertura\n```javascript\ncoverageThreshold: {\n  'src/modules/**/domain/**': { lines: 85 },\n  'src/modules/**/application/**': { lines: 80 },\n  'src/components/**': { lines: 75 },\n  'src/hooks/**': { lines: 80 }\n}\n```\n\n## 8. Manejo de Errores y Fallbacks\n\n### Estrategias de Recuperaci√≥n\n**Si los tests fallan:**\n1. Reportar errores espec√≠ficos\n2. Sugerir posibles causas\n3. Proporcionar comandos para debug\n4. Ofrecer ejecutar tests individuales\n\n**Si no hay tests relacionados:**\n1. Sugerir crear tests para el archivo\n2. Identificar patrones de testing similares\n3. Proporcionar plantillas de tests\n\n## Instrucciones de Ejecuci√≥n\n\n1. **Analizar** el archivo modificado y su contexto\n2. **Identificar** tests relacionados usando an√°lisis est√°tico\n3. **Ejecutar** tests en orden de prioridad (unitarios ‚Üí integraci√≥n ‚Üí E2E)\n4. **Analizar** resultados y detectar regresiones\n5. **Reportar** resultados con m√©tricas y sugerencias\n6. **Optimizar** para pr√≥ximas ejecuciones\n\n**Formato de Respuesta:**\n- üß™ **Tests ejecutados**: [n√∫mero de tests]\n- ‚úÖ **Exitosos**: [n√∫mero] | ‚ùå **Fallidos**: [n√∫mero]\n- üìä **Cobertura**: [porcentaje actual] ([cambio])\n- ‚è±Ô∏è **Tiempo**: [duraci√≥n de ejecuci√≥n]\n- üîç **Archivos analizados**: [lista de archivos relacionados]\n- ‚ö†Ô∏è **Regresiones detectadas**: [lista de problemas]\n- üí° **Sugerencias**: [recomendaciones para mejorar tests]\n- üöÄ **Pr√≥ximos pasos**: [acciones recomendadas]"
  }
}