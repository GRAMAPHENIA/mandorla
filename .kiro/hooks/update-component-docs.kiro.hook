{
  "enabled": true,
  "name": "Actualizador de Documentaci√≥n de Componentes",
  "description": "Hook que regenera autom√°ticamente la documentaci√≥n de componentes React al guardar archivos, manteniendo ejemplos de uso, props y casos de uso actualizados",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/components/**/*.{tsx,ts}",
      "src/modules/**/presentation/**/*.{tsx,ts}",
      "src/shared/components/**/*.{tsx,ts}"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Genera o actualiza autom√°ticamente la documentaci√≥n del componente React modificado siguiendo el est√°ndar del proyecto Mandorla:\n\n## 1. An√°lisis del Componente\n\n**Extraer informaci√≥n:**\n- Nombre del componente y su prop√≥sito\n- Props y sus tipos (incluyendo opcionales)\n- Hooks utilizados y su funci√≥n\n- Dependencias externas\n- Casos de uso principales\n\n**Identificar patrones:**\n- Si es un componente UI base (shadcn/ui)\n- Si es un componente de dominio espec√≠fico\n- Si implementa l√≥gica de negocio\n- Si es un componente de layout\n\n## 2. Estructura de Documentaci√≥n\n\n**Crear documentaci√≥n en espa√±ol con:**\n\n```markdown\n# [NombreComponente]\n\n## Descripci√≥n\n[Descripci√≥n clara del prop√≥sito del componente]\n\n## Uso B√°sico\n```tsx\nimport { [NombreComponente] } from '@/components/[ruta]'\n\nfunction Ejemplo() {\n  return (\n    <[NombreComponente]\n      // props b√°sicas\n    />\n  )\n}\n```\n\n## Props\n\n| Prop | Tipo | Requerida | Default | Descripci√≥n |\n|------|------|-----------|---------|-------------|\n| prop1 | string | ‚úÖ | - | Descripci√≥n de prop1 |\n| prop2 | number | ‚ùå | 0 | Descripci√≥n de prop2 |\n\n## Ejemplos de Uso\n\n### Ejemplo 1: [Caso de uso b√°sico]\n```tsx\n// C√≥digo de ejemplo\n```\n\n### Ejemplo 2: [Caso de uso avanzado]\n```tsx\n// C√≥digo de ejemplo m√°s complejo\n```\n\n## Variantes\n[Si el componente tiene variantes usando class-variance-authority]\n\n## Accesibilidad\n- [Caracter√≠sticas de accesibilidad implementadas]\n- [Soporte para screen readers]\n- [Navegaci√≥n por teclado]\n\n## Notas de Implementaci√≥n\n- [Detalles t√©cnicos importantes]\n- [Patrones de dise√±o utilizados]\n- [Consideraciones de rendimiento]\n\n## Componentes Relacionados\n- [Lista de componentes relacionados]\n\n## Changelog\n- [Fecha]: [Cambios realizados]\n```\n\n## 3. Casos Espec√≠ficos por Tipo\n\n**Componentes UI Base (shadcn/ui):**\n- Documentar variantes disponibles\n- Incluir ejemplos de personalizaci√≥n con Tailwind\n- Mostrar integraci√≥n con formularios (React Hook Form)\n- Documentar props de accesibilidad\n\n**Componentes de Dominio:**\n- Explicar la l√≥gica de negocio implementada\n- Documentar integraci√≥n con stores de Zustand\n- Mostrar manejo de estados de carga y error\n- Incluir ejemplos con datos reales del negocio\n\n**Componentes de Layout:**\n- Documentar responsive design\n- Mostrar diferentes configuraciones de layout\n- Explicar integraci√≥n con Next.js (si aplica)\n- Documentar soporte para temas (dark/light)\n\n## 4. Generaci√≥n de Ejemplos Interactivos\n\n**Para cada componente crear:**\n- Ejemplo b√°sico funcional\n- Ejemplo con todas las props\n- Ejemplo de caso de uso real en Mandorla\n- Ejemplo de manejo de errores (si aplica)\n\n**Formato de ejemplos:**\n```tsx\n// ‚úÖ Ejemplo: [Descripci√≥n]\nfunction EjemploBasico() {\n  const [estado, setEstado] = useState(valorInicial)\n  \n  return (\n    <ComponenteEjemplo\n      prop1=\"valor\"\n      prop2={estado}\n      onCambio={setEstado}\n    />\n  )\n}\n```\n\n## 5. Integraci√≥n con Sistema de Documentaci√≥n\n\n**Crear archivos:**\n- `[componente].docs.md` en la misma carpeta del componente\n- Actualizar √≠ndice de componentes si existe\n- Generar enlaces cruzados con componentes relacionados\n\n**Metadatos a incluir:**\n```yaml\n---\ntitle: [NombreComponente]\ncategory: [UI/Domain/Layout]\ntags: [tag1, tag2, tag3]\nlastUpdated: [fecha]\nauthor: Sistema de documentaci√≥n autom√°tica\nstatus: [stable/beta/deprecated]\n---\n```\n\n## 6. Validaciones de Calidad\n\n**Verificar que la documentaci√≥n:**\n- Est√© en espa√±ol\n- Tenga ejemplos funcionales\n- Incluya todos los props p√∫blicos\n- Tenga descripciones claras\n- Siga el formato est√°ndar del proyecto\n\n**Detectar y reportar:**\n- Props sin documentar\n- Ejemplos que no compilan\n- Componentes sin casos de uso claros\n- Falta de informaci√≥n de accesibilidad\n\n## Instrucciones de Ejecuci√≥n\n\n1. **Analizar** el componente modificado\n2. **Extraer** informaci√≥n de props, tipos y funcionalidad\n3. **Generar** documentaci√≥n siguiendo la estructura definida\n4. **Crear ejemplos** funcionales y relevantes\n5. **Validar** que la documentaci√≥n est√© completa\n6. **Guardar** en archivo `.docs.md` junto al componente\n\n**Formato de Respuesta:**\n- üìù **Documentaci√≥n generada**: [nombre del archivo creado]\n- ‚úÖ **Props documentadas**: [n√∫mero de props]\n- üîç **Ejemplos creados**: [n√∫mero de ejemplos]\n- ‚ö†Ô∏è **Advertencias**: [props o funcionalidades sin documentar]\n- üí° **Sugerencias**: [mejoras recomendadas para el componente]"
  }
}