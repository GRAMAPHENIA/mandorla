{
  "enabled": true,
  "name": "Validador de Convenciones de Nomenclatura",
  "description": "Hook que valida las convenciones de nomenclatura en espa√±ol para componentes, variables, funciones y archivos del proyecto Mandorla",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.{ts,tsx}",
      "types/**/*.ts",
      "lib/**/*.ts"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Valida las convenciones de nomenclatura del archivo modificado seg√∫n los est√°ndares del proyecto Mandorla:\n\n## 1. Convenciones de Componentes React\n- **Nombres de componentes**: PascalCase con nombres descriptivos en espa√±ol\n  - ‚úÖ Correcto: `ListaProductos`, `FormularioCliente`, `BotonAgregarCarrito`\n  - ‚ùå Incorrecto: `productList`, `client_form`, `addToCartBtn`\n- **Archivos de componentes**: Mismo nombre que el componente + extensi√≥n\n  - ‚úÖ Correcto: `ListaProductos.tsx`, `FormularioCliente.tsx`\n\n## 2. Convenciones de Variables y Funciones\n- **Variables de negocio**: camelCase con nombres en espa√±ol\n  - ‚úÖ Correcto: `precioTotal`, `cantidadProductos`, `datosCliente`\n  - ‚ùå Incorrecto: `totalPrice`, `product_count`, `customerData`\n- **Funciones**: camelCase con verbos descriptivos en espa√±ol\n  - ‚úÖ Correcto: `calcularPrecioTotal()`, `agregarAlCarrito()`, `validarFormulario()`\n  - ‚ùå Incorrecto: `calculateTotal()`, `addToCart()`, `validateForm()`\n\n## 3. Convenciones de Tipos TypeScript\n- **Interfaces**: PascalCase con sufijo descriptivo\n  - ‚úÖ Correcto: `ProductoInterface`, `ClienteType`, `PedidoEntity`\n- **Enums**: PascalCase con valores en UPPER_CASE\n  - ‚úÖ Correcto: `EstadoPedido { PENDIENTE, PROCESANDO, COMPLETADO }`\n\n## 4. Convenciones de Archivos y Carpetas\n- **Archivos**: kebab-case para archivos de utilidades\n  - ‚úÖ Correcto: `validaciones-formulario.ts`, `utilidades-precio.ts`\n- **Carpetas de m√≥dulos**: kebab-case\n  - ‚úÖ Correcto: `modulos/productos/`, `modulos/carrito/`\n\n## 5. Excepciones Permitidas\n- **APIs externas**: Mantener nombres originales (ej: `useState`, `useEffect`)\n- **Librer√≠as**: Mantener convenciones de la librer√≠a\n- **Constantes globales**: UPPER_SNAKE_CASE (ej: `API_BASE_URL`)\n\n## 6. Validaciones Espec√≠ficas\n- **Consistencia**: Verificar que nombres similares sigan el mismo patr√≥n\n- **Claridad**: Los nombres deben ser autodescriptivos\n- **Contexto**: Los nombres deben reflejar el dominio de negocio (panader√≠a/e-commerce)\n\n**Instrucciones:**\n1. Analiza todos los nombres en el archivo (variables, funciones, componentes, tipos)\n2. Identifica violaciones a las convenciones\n3. Proporciona sugerencias espec√≠ficas de correcci√≥n\n4. Prioriza la claridad y consistencia\n5. Respeta el contexto del negocio (Mandorla - panader√≠a)\n\n**Formato de Respuesta:**\n- ‚úÖ Convenciones correctas: [lista de elementos que siguen las reglas]\n- ‚ö†Ô∏è Sugerencias de mejora: [nombres que podr√≠an ser m√°s descriptivos]\n- ‚ùå Violaciones encontradas: [nombres que no siguen las convenciones]\n- üîß Correcciones sugeridas: [propuestas espec√≠ficas de cambio]"
  }
}