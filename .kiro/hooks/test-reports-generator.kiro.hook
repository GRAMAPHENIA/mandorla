{
  "enabled": true,
  "name": "Generador de Reportes de Testing",
  "description": "Hook que genera reportes autom√°ticos de resultados de testing, m√©tricas de calidad y tendencias, proporcionando visibilidad completa del estado de las pruebas",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "**/*.test.{ts,tsx,js}",
      "**/*.spec.{ts,tsx,js}",
      "**/__tests__/**/*.{ts,tsx,js}"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Genera reportes autom√°ticos de testing cuando se modifican o crean tests, proporcionando m√©tricas y an√°lisis de calidad:\n\n## 1. An√°lisis de Tests Modificados\n\n### Detecci√≥n de Cambios en Tests\n**Identificar**:\n- Tests nuevos agregados\n- Tests modificados o actualizados\n- Tests eliminados\n- Cambios en configuraci√≥n de testing\n- Nuevos archivos de test creados\n\n### Clasificaci√≥n de Tests\n**Por tipo**:\n- **Unitarios**: `*.test.ts`, `*.spec.ts`\n- **Integraci√≥n**: `*.integration.test.ts`\n- **End-to-End**: `*.e2e.test.ts`\n- **Componentes**: `*.component.test.tsx`\n\n**Por m√≥dulo**:\n- **Dominio**: `src/modules/*/domain/**/*.test.ts`\n- **Aplicaci√≥n**: `src/modules/*/application/**/*.test.ts`\n- **Infraestructura**: `src/modules/*/infrastructure/**/*.test.ts`\n- **Presentaci√≥n**: `src/modules/*/presentation/**/*.test.tsx`\n\n## 2. M√©tricas de Calidad de Tests\n\n### M√©tricas B√°sicas\n```typescript\ninterface TestMetrics {\n  totalTests: number\n  passedTests: number\n  failedTests: number\n  skippedTests: number\n  executionTime: number\n  coverage: {\n    lines: number\n    branches: number\n    functions: number\n    statements: number\n  }\n}\n```\n\n### M√©tricas Avanzadas\n```typescript\ninterface AdvancedTestMetrics {\n  testComplexity: {\n    averageAssertions: number\n    averageTestLength: number\n    complexTests: string[] // Tests con muchas l√≠neas\n  }\n  testMaintainability: {\n    duplicatedCode: number\n    testSmells: string[] // Anti-patrones detectados\n    outdatedMocks: string[]\n  }\n  testEffectiveness: {\n    mutationScore: number // Si se usa mutation testing\n    flakyTests: string[] // Tests que fallan intermitentemente\n    slowTests: string[] // Tests que tardan mucho\n  }\n}\n```\n\n## 3. Generaci√≥n de Reportes por Categor√≠a\n\n### Reporte de Tests Unitarios\n```markdown\n# üß™ Reporte de Tests Unitarios\n\n## Resumen Ejecutivo\n- **Total de tests**: [n√∫mero]\n- **Tests exitosos**: [n√∫mero] ([porcentaje]%)\n- **Tests fallidos**: [n√∫mero] ([porcentaje]%)\n- **Cobertura promedio**: [porcentaje]%\n- **Tiempo de ejecuci√≥n**: [tiempo]\n\n## Detalles por M√≥dulo\n\n### M√≥dulo de Productos\n- **Archivos de test**: 12\n- **Tests**: 45 (‚úÖ 42, ‚ùå 3)\n- **Cobertura**: 87% (l√≠neas), 82% (ramas)\n- **Tiempo**: 2.3s\n- **Estado**: ‚ö†Ô∏è 3 tests fallando\n\n#### Tests Fallidos\n1. `product-entity.test.ts:45` - \"deber√≠a calcular descuento correctamente\"\n   - **Error**: Expected 2250, received 2500\n   - **Causa**: Cambio en l√≥gica de descuentos\n   - **Acci√≥n**: Actualizar test o revisar l√≥gica\n\n### M√≥dulo de Carrito\n- **Archivos de test**: 8\n- **Tests**: 32 (‚úÖ 32, ‚ùå 0)\n- **Cobertura**: 92% (l√≠neas), 88% (ramas)\n- **Tiempo**: 1.8s\n- **Estado**: ‚úÖ Todos los tests pasan\n\n## Tendencias (√öltimos 7 d√≠as)\n- **Cobertura**: 85% ‚Üí 87% (+2%)\n- **Tests totales**: 156 ‚Üí 162 (+6)\n- **Tiempo promedio**: 8.2s ‚Üí 7.9s (-0.3s)\n- **Tests fallidos**: 2 ‚Üí 3 (+1)\n\n## Recomendaciones\n1. Revisar tests fallidos en m√≥dulo de productos\n2. Agregar tests para nuevas funcionalidades\n3. Optimizar tests lentos (>5s)\n4. Mejorar cobertura en m√≥dulo de pedidos (72%)\n```\n\n### Reporte de Tests de Integraci√≥n\n```markdown\n# üîó Reporte de Tests de Integraci√≥n\n\n## Resumen Ejecutivo\n- **Flujos probados**: [n√∫mero]\n- **APIs cubiertas**: [n√∫mero]/[total]\n- **Tiempo total**: [tiempo]\n- **Estado general**: [‚úÖ/‚ùå/‚ö†Ô∏è]\n\n## Flujos Cr√≠ticos\n\n### ‚úÖ Flujo de Checkout\n- **Tests**: 8/8 pasando\n- **Cobertura**: Completa (carrito ‚Üí pedido ‚Üí pago)\n- **Tiempo**: 15.2s\n- **√öltima ejecuci√≥n**: Exitosa\n\n### ‚ùå Flujo de B√∫squeda\n- **Tests**: 5/7 pasando\n- **Problemas**: Filtros avanzados fallan\n- **Tiempo**: 12.1s\n- **Acci√≥n requerida**: Revisar l√≥gica de filtros\n\n### ‚ö†Ô∏è Flujo de Registro\n- **Tests**: 6/6 pasando\n- **Advertencia**: Lento (>20s)\n- **Causa**: Validaci√≥n de email externa\n- **Sugerencia**: Optimizar o mockear servicio\n\n## APIs Probadas\n\n| Endpoint | Tests | Estado | Cobertura | Tiempo |\n|----------|-------|--------|-----------|--------|\n| /api/products | 12 | ‚úÖ | 95% | 3.2s |\n| /api/cart | 8 | ‚úÖ | 100% | 2.1s |\n| /api/orders | 6 | ‚ùå | 80% | 4.5s |\n| /api/customers | 4 | ‚úÖ | 90% | 1.8s |\n\n## Dependencias Externas\n- **Base de datos**: ‚úÖ Conexi√≥n estable\n- **Servicio de email**: ‚ö†Ô∏è Timeout ocasional\n- **API de pagos**: ‚úÖ Mock funcionando\n- **Servicio de inventario**: ‚úÖ Respuestas r√°pidas\n```\n\n### Reporte de Cobertura Detallado\n```markdown\n# üìä Reporte de Cobertura de C√≥digo\n\n## Cobertura Global\n- **L√≠neas**: 1,247/1,456 (85.6%)\n- **Ramas**: 234/278 (84.2%)\n- **Funciones**: 156/178 (87.6%)\n- **Statements**: 1,198/1,398 (85.7%)\n\n## Cobertura por M√≥dulo\n\n### üü¢ M√≥dulos con Buena Cobertura (>80%)\n| M√≥dulo | L√≠neas | Ramas | Funciones | Statements |\n|--------|--------|-------|-----------|------------|\n| Carrito | 92% | 88% | 95% | 91% |\n| Productos | 87% | 82% | 89% | 86% |\n| Clientes | 85% | 80% | 87% | 84% |\n\n### üü° M√≥dulos que Necesitan Mejora (60-80%)\n| M√≥dulo | L√≠neas | Ramas | Funciones | Statements | Acci√≥n |\n|--------|--------|-------|-----------|------------|--------|\n| Pedidos | 72% | 68% | 75% | 71% | +8 tests |\n| Utilidades | 65% | 60% | 70% | 64% | +5 tests |\n\n### üî¥ M√≥dulos Cr√≠ticos (<60%)\n| M√≥dulo | L√≠neas | Ramas | Funciones | Statements | Prioridad |\n|--------|--------|-------|-----------|------------|----------|\n| Reportes | 45% | 40% | 50% | 44% | Alta |\n\n## Archivos Sin Cobertura\n1. `src/utils/legacy-helpers.ts` - 0% cobertura\n2. `src/lib/deprecated-functions.ts` - 15% cobertura\n3. `src/modules/reportes/domain/entities/report-entity.ts` - 30% cobertura\n\n## L√≠neas Cr√≠ticas Sin Cobertura\n- **Validaciones de seguridad**: 12 l√≠neas\n- **Manejo de errores**: 8 l√≠neas\n- **C√°lculos de negocio**: 15 l√≠neas\n- **Integraciones externas**: 6 l√≠neas\n```\n\n## 4. An√°lisis de Tendencias\n\n### Dashboard de M√©tricas Hist√≥ricas\n```json\n{\n  \"testTrends\": {\n    \"last30Days\": [\n      {\n        \"date\": \"2024-01-15\",\n        \"totalTests\": 162,\n        \"passRate\": 98.1,\n        \"coverage\": 87.2,\n        \"executionTime\": 7.9\n      },\n      {\n        \"date\": \"2024-01-14\",\n        \"totalTests\": 158,\n        \"passRate\": 97.5,\n        \"coverage\": 86.8,\n        \"executionTime\": 8.2\n      }\n    ]\n  },\n  \"qualityMetrics\": {\n    \"testComplexity\": {\n      \"trend\": \"improving\",\n      \"averageAssertions\": 3.2,\n      \"complexTestsCount\": 5\n    },\n    \"maintainability\": {\n      \"duplicatedCode\": 2.1,\n      \"testSmells\": 3,\n      \"outdatedMocks\": 1\n    }\n  }\n}\n```\n\n### An√°lisis de Regresiones\n```markdown\n## üìà An√°lisis de Tendencias (30 d√≠as)\n\n### M√©tricas Positivas\n- **Cobertura**: +2.4% (84.8% ‚Üí 87.2%)\n- **Tests totales**: +12 tests nuevos\n- **Tiempo de ejecuci√≥n**: -0.8s (optimizaci√≥n)\n- **Tests de integraci√≥n**: +3 flujos nuevos\n\n### M√©tricas que Requieren Atenci√≥n\n- **Tests fallidos**: +1 (tendencia al alza)\n- **Tests lentos**: 3 tests >10s (sin cambio)\n- **Mocks desactualizados**: 2 detectados\n\n### Predicciones\n- **Cobertura objetivo 90%**: Alcanzable en 2 semanas\n- **Tiempo de ejecuci√≥n**: Estable con optimizaciones\n- **Calidad de tests**: Mejorando gradualmente\n```\n\n## 5. Detecci√≥n de Problemas de Calidad\n\n### Test Smells (Anti-patrones)\n```typescript\n// Detectar problemas comunes en tests\nconst testSmells = {\n  // Tests muy largos (>50 l√≠neas)\n  longTests: [\n    'src/modules/productos/domain/entities/product-entity.test.ts:125-180'\n  ],\n  \n  // Tests con muchas aserciones (>10)\n  assertionRoulette: [\n    'src/modules/carrito/application/services/cart-service.test.ts:45'\n  ],\n  \n  // Tests que dependen de otros tests\n  testDependency: [\n    'src/modules/pedidos/integration/order-flow.test.ts:67'\n  ],\n  \n  // Mocks complejos o desactualizados\n  complexMocks: [\n    'src/modules/clientes/infrastructure/customer-repository.test.ts:23'\n  ],\n  \n  // Tests duplicados o muy similares\n  duplicatedTests: [\n    'src/components/products/product-card.test.tsx:34',\n    'src/components/products/product-card.test.tsx:67'\n  ]\n}\n```\n\n### Recomendaciones de Mejora\n```markdown\n## üí° Recomendaciones de Mejora\n\n### Inmediatas (Esta semana)\n1. **Corregir tests fallidos** (3 tests en m√≥dulo productos)\n2. **Actualizar mocks desactualizados** (2 archivos)\n3. **Optimizar tests lentos** (>10s)\n\n### Corto plazo (2 semanas)\n1. **Mejorar cobertura en m√≥dulo pedidos** (72% ‚Üí 85%)\n2. **Refactorizar tests complejos** (5 tests identificados)\n3. **Agregar tests de regresi√≥n** para bugs recientes\n\n### Largo plazo (1 mes)\n1. **Implementar mutation testing** para validar calidad\n2. **Automatizar detecci√≥n de flaky tests**\n3. **Crear suite de tests de performance**\n```\n\n## 6. Integraci√≥n con Herramientas\n\n### Configuraci√≥n de Reportes\n```javascript\n// jest.config.js - Configuraci√≥n de reportes\nmodule.exports = {\n  reporters: [\n    'default',\n    ['jest-html-reporters', {\n      publicPath: './test-reports',\n      filename: 'test-report.html',\n      expand: true\n    }],\n    ['jest-junit', {\n      outputDirectory: './test-reports',\n      outputName: 'junit.xml'\n    }]\n  ],\n  collectCoverage: true,\n  coverageReporters: ['text', 'lcov', 'html', 'json-summary']\n}\n```\n\n### Exportaci√≥n de Datos\n```typescript\n// Exportar m√©tricas para dashboards externos\ninterface TestReportExport {\n  timestamp: string\n  summary: TestSummary\n  coverage: CoverageReport\n  trends: TrendAnalysis\n  recommendations: Recommendation[]\n  exportFormat: 'json' | 'xml' | 'csv'\n}\n```\n\n## 7. Alertas y Notificaciones\n\n### Criterios de Alerta\n- **üî¥ Cr√≠tico**: >5% tests fallando o cobertura <70%\n- **üü° Advertencia**: Degradaci√≥n en m√©tricas >3%\n- **üü¢ Informaci√≥n**: Mejoras significativas detectadas\n\n### Canales de Notificaci√≥n\n- **Slack**: Alertas cr√≠ticas y res√∫menes diarios\n- **Email**: Reportes semanales detallados\n- **Dashboard**: M√©tricas en tiempo real\n- **PR Comments**: Comentarios autom√°ticos en pull requests\n\n## Instrucciones de Ejecuci√≥n\n\n1. **Detectar** cambios en archivos de test\n2. **Ejecutar** an√°lisis de m√©tricas de calidad\n3. **Generar** reportes por categor√≠a (unitarios, integraci√≥n, cobertura)\n4. **Analizar** tendencias y detectar regresiones\n5. **Identificar** problemas de calidad y anti-patrones\n6. **Crear** recomendaciones espec√≠ficas\n7. **Exportar** datos para herramientas externas\n\n**Formato de Respuesta:**\n- üìä **Reporte generado**: [tipo de reporte]\n- üß™ **Tests analizados**: [n√∫mero total]\n- üìà **M√©tricas clave**: [cobertura, tiempo, √©xito]\n- üîç **Problemas detectados**: [n√∫mero y tipos]\n- üìã **Recomendaciones**: [n√∫mero de acciones sugeridas]\n- üìÅ **Archivos generados**: [lista de reportes creados]\n- üö® **Alertas**: [nivel de criticidad]\n- üí° **Pr√≥ximos pasos**: [acciones prioritarias]"
  }
}